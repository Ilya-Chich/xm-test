version: '3.9'

networks:
  default:
    driver: bridge

volumes:
  database-data:
  kafka-data:

services:
  xm-test-ilya-chicherin:
    build:
      context: .
      dockerfile: environment/dev/Dockerfile
    depends_on:
      #- redis
      - kafka
      - postgres
    env_file:
      - .env
    volumes:
      - ./:/app
    ports:
      - "${HTTP_PORT}:${HTTP_PORT}"
      - "2345:2345"
    networks:
      - default
    restart: unless-stopped

  #redis:
  #  image: redis:6-alpine
  #  ports:
  #    - "6379:6379"
  #  networks:
  #    - default
  #  restart: unless-stopped

  postgres:
    image: postgres
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: ${PGDATA}
    networks:
      - default
    volumes:
      - database-data:/var/lib/postgresql/data/
      - ./migrations/init_up.sql:/docker-entrypoint-initdb.d/init.sql

  kafka:
    image: apache/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller,broker
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CLUSTER_ID: "X1M69BVRSgqJ3O5K9Yq2zA"

    volumes:
      - ./environment/dev/kafka-data:/var/lib/kafka/data
    networks:
      - default
    restart: unless-stopped